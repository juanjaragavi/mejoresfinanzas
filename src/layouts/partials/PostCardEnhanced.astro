---
/**
 * Enhanced Blog Post Card Component
 * Modern, accessible, and feature-rich post card with animations
 */

import type { CollectionEntry } from "astro:content";
import { Image } from "astro:assets";
import { humanize, slugify } from "@/lib/utils/textConverter";
import config from "@/config/config.json";
import { blogManager } from "@/lib/blogManager";

export interface Props {
  post: CollectionEntry<"personal-finance" | "financial-solutions">;
  index?: number;
  showExcerpt?: boolean;
  showReadingTime?: boolean;
  showCategories?: boolean;
  showAuthor?: boolean;
  showDate?: boolean;
  variant?: "default" | "featured" | "compact" | "card";
  lazyLoad?: boolean;
  animationDelay?: number;
  className?: string;
}

const {
  post,
  index = 0,
  showExcerpt = true,
  showReadingTime = true,
  showCategories = true,
  showAuthor = false,
  showDate = true,
  variant = "default",
  lazyLoad = true,
  animationDelay = 0,
  className = "",
} = Astro.props;

const { summary_length } = config.settings;

// Generate optimized data
const excerpt = showExcerpt
  ? blogManager.generateExcerpt(post, summary_length)
  : "";
const readingTime = showReadingTime ? blogManager.getReadingTime(post) : 0;
const postUrl = `/${post.collection}/${post.id}/`;

// Variant classes
const variantClasses = {
  default:
    "bg-theme-light dark:bg-darkmode-theme-light rounded-lg shadow-sm hover:shadow-md transition-all duration-300",
  featured:
    "bg-gradient-to-br from-theme-light to-body dark:from-darkmode-theme-light dark:to-darkmode-body rounded-xl shadow-lg hover:shadow-xl transition-all duration-300 border border-border dark:border-darkmode-border",
  compact:
    "bg-theme-light dark:bg-darkmode-theme-light rounded-md shadow-sm hover:shadow-sm transition-all duration-200",
  card: "bg-white dark:bg-gray-800 rounded-lg shadow-md hover:shadow-lg transition-all duration-300 border border-gray-200 dark:border-gray-700",
};

const imageClasses = {
  default: "h-48 sm:h-52 md:h-56",
  featured: "h-56 sm:h-64 md:h-72",
  compact: "h-40 sm:h-44",
  card: "h-48 sm:h-52",
};

const contentClasses = {
  default: "p-4 sm:p-5",
  featured: "p-6 sm:p-7",
  compact: "p-3 sm:p-4",
  card: "p-5 sm:p-6",
};
---

<article
  class={`group relative overflow-hidden transform transition-all duration-300 hover:scale-[1.02] ${variantClasses[variant]} ${className}`}
  style={animationDelay > 0
    ? `--animation-delay: ${animationDelay}ms`
    : undefined}
  data-aos="fade-up"
  data-aos-delay={animationDelay}
  data-post-id={post.id}
  data-collection={post.collection}
  data-categories={post.data.categories ? post.data.categories.join(",") : ""}
  role="article"
  aria-labelledby={`post-title-${post.id}`}
>
  <!-- Featured Badge -->
  {
    variant === "featured" && (
      <div class="absolute top-4 left-4 z-10">
        <span class="inline-flex items-center px-3 py-1 rounded-full text-xs font-medium bg-primary text-white shadow-sm">
          <svg class="w-3 h-3 mr-1" fill="currentColor" viewBox="0 0 20 20">
            <path d="M9.049 2.927c.3-.921 1.603-.921 1.902 0l1.07 3.292a1 1 0 00.95.69h3.462c.969 0 1.371 1.24.588 1.81l-2.8 2.034a1 1 0 00-.364 1.118l1.07 3.292c.3.921-.755 1.688-1.54 1.118l-2.8-2.034a1 1 0 00-1.175 0l-2.8 2.034c-.784.57-1.838-.197-1.539-1.118l1.07-3.292a1 1 0 00-.364-1.118L2.98 8.719c-.783-.57-.38-1.81.588-1.81h3.461a1 1 0 00.951-.69l1.07-3.292z" />
          </svg>
          Featured
        </span>
      </div>
    )
  }

  <!-- Image Container with Optimized Loading -->
  <div class={`relative overflow-hidden ${imageClasses[variant]}`}>
    <a
      href={postUrl}
      class="block h-full"
      aria-labelledby={`post-title-${post.id}`}
    >
      {
        post.data.image ? (
          <Image
            src={post.data.image}
            alt={post.data.title}
            width={400}
            height={300}
            class="h-full w-full object-cover transition-transform duration-500 group-hover:scale-110"
            loading={lazyLoad ? "lazy" : "eager"}
            decoding={lazyLoad ? "async" : "sync"}
            format="webp"
            quality={85}
          />
        ) : (
          <div class="flex h-full w-full items-center justify-center bg-gradient-to-br from-gray-100 to-gray-200 dark:from-gray-700 dark:to-gray-800">
            <div class="text-center">
              <svg
                class="mx-auto h-12 w-12 text-gray-400 dark:text-gray-500"
                fill="none"
                viewBox="0 0 24 24"
                stroke="currentColor"
              >
                <path
                  stroke-linecap="round"
                  stroke-linejoin="round"
                  stroke-width="2"
                  d="M4 16l4.586-4.586a2 2 0 012.828 0L16 16m-2-2l1.586-1.586a2 2 0 012.828 0L20 14m-6-6h.01M6 20h12a2 2 0 002-2V6a2 2 0 00-2-2H6a2 2 0 00-2 2v12a2 2 0 002 2z"
                />
              </svg>
              <p class="mt-2 text-sm text-gray-500 dark:text-gray-400">
                No image
              </p>
            </div>
          </div>
        )
      }
    </a>

    <!-- Reading Time Overlay -->
    {
      showReadingTime && readingTime > 0 && (
        <div class="absolute bottom-3 right-3">
          <span class="inline-flex items-center px-2 py-1 rounded-full text-xs font-medium bg-black/70 text-white backdrop-blur-sm">
            <svg
              class="w-3 h-3 mr-1"
              fill="none"
              stroke="currentColor"
              viewBox="0 0 24 24"
            >
              <path
                stroke-linecap="round"
                stroke-linejoin="round"
                stroke-width="2"
                d="M12 8v4l3 3m6-3a9 9 0 11-18 0 9 9 0 0118 0z"
              />
            </svg>
            {readingTime} min read
          </span>
        </div>
      )
    }
  </div>

  <!-- Content -->
  <div class={contentClasses[variant]}>
    <!-- Categories -->
    {
      showCategories &&
        post.data.categories &&
        post.data.categories.length > 0 && (
          <div class="mb-3 flex flex-wrap gap-2">
            {post.data.categories.slice(0, 2).map((category: string) => (
              <a
                href={`/categories/${slugify(category)}/`}
                class="inline-flex items-center px-2.5 py-0.5 rounded-full text-xs font-medium bg-primary/10 text-primary hover:bg-primary/20 transition-colors duration-200"
                aria-label={`View posts in ${category} category`}
              >
                {humanize(category)}
              </a>
            ))}
            {post.data.categories.length > 2 && (
              <span class="inline-flex items-center px-2.5 py-0.5 rounded-full text-xs font-medium bg-gray-100 dark:bg-gray-700 text-gray-600 dark:text-gray-300">
                +{post.data.categories.length - 2} more
              </span>
            )}
          </div>
        )
    }

    <!-- Title -->
    <h3 class="mb-3">
      <a
        href={postUrl}
        id={`post-title-${post.id}`}
        class={`
          block font-bold leading-tight text-dark dark:text-darkmode-dark
          hover:text-primary dark:hover:text-darkmode-primary transition-colors duration-200
          ${variant === "featured" ? "text-xl sm:text-2xl" : variant === "compact" ? "text-base sm:text-lg" : "text-lg sm:text-xl"}
        `}
      >
        {post.data.title}
      </a>
    </h3>

    <!-- Excerpt -->
    {
      showExcerpt && excerpt && (
        <p
          class={`
        text-text dark:text-darkmode-text mb-4 leading-relaxed
        ${variant === "compact" ? "text-sm" : "text-base"}
      `}
        >
          {excerpt}
        </p>
      )
    }

    <!-- Meta Information -->
    <div class="flex items-center justify-between">
      <div
        class="flex items-center space-x-4 text-sm text-light dark:text-darkmode-light"
      >
        {/* Author */}
        {
          showAuthor && post.data.authors && post.data.authors.length > 0 && (
            <span class="flex items-center">
              <svg class="w-4 h-4 mr-1" fill="currentColor" viewBox="0 0 20 20">
                <path
                  fill-rule="evenodd"
                  d="M10 9a3 3 0 100-6 3 3 0 000 6zm-7 9a7 7 0 1114 0H3z"
                  clip-rule="evenodd"
                />
              </svg>
              {post.data.authors[0]}
            </span>
          )
        }

        {/* Date */}
        {
          showDate && post.data.date && (
            <time
              datetime={new Date(post.data.date).toISOString()}
              class="flex items-center"
            >
              <svg
                class="w-4 h-4 mr-1"
                fill="none"
                stroke="currentColor"
                viewBox="0 0 24 24"
              >
                <path
                  stroke-linecap="round"
                  stroke-linejoin="round"
                  stroke-width="2"
                  d="M8 7V3m8 4V3m-9 8h10M5 21h14a2 2 0 002-2V7a2 2 0 00-2-2H5a2 2 0 00-2 2v12a2 2 0 002 2z"
                />
              </svg>
              {new Date(post.data.date).toLocaleDateString("en-US", {
                year: "numeric",
                month: "short",
                day: "numeric",
              })}
            </time>
          )
        }
      </div>

      <!-- Read More Button -->
      <a
        href={postUrl}
        class={`
          inline-flex items-center font-medium text-primary hover:text-primary/80
          transition-all duration-200 hover:translate-x-1
          ${variant === "compact" ? "text-sm" : "text-base"}
        `}
        aria-label={`Read more about ${post.data.title}`}
      >
        Read More
        <svg
          class="ml-1 w-4 h-4"
          fill="none"
          stroke="currentColor"
          viewBox="0 0 24 24"
        >
          <path
            stroke-linecap="round"
            stroke-linejoin="round"
            stroke-width="2"
            d="M9 5l7 7-7 7"></path>
        </svg>
      </a>
    </div>
  </div>

  <!-- Interactive Hover Effect -->
  <div
    class="absolute inset-0 bg-gradient-to-t from-transparent via-transparent to-transparent opacity-0 group-hover:opacity-5 transition-opacity duration-300 pointer-events-none"
  >
  </div>
</article>

<style>
  /* Animation for staggered entrance */
  article {
    animation: slideInUp 0.6s ease-out forwards;
    animation-delay: var(--animation-delay, 0ms);
    opacity: 0;
    transform: translateY(20px);
  }

  @keyframes slideInUp {
    to {
      opacity: 1;
      transform: translateY(0);
    }
  }

  /* Smooth focus styles for accessibility */
  article:focus-within {
    outline: 2px solid rgb(var(--color-primary));
    outline-offset: 2px;
  }

  /* Enhanced hover effects */
  @media (hover: hover) {
    article:hover {
      box-shadow:
        0 20px 25px -5px rgb(0 0 0 / 0.1),
        0 10px 10px -5px rgb(0 0 0 / 0.04);
    }
  }

  /* Reduced motion support */
  @media (prefers-reduced-motion: reduce) {
    article,
    article * {
      animation-duration: 0.01ms !important;
      animation-iteration-count: 1 !important;
      transition-duration: 0.01ms !important;
    }
  }
</style>
